import("stdfaust.lib");
//fcut    =  vslider( "freq CUT [style:knob] [scale:exp]", 880,20, 10000, 1); //
//order   =  32;//
//f1  = no.noise : fi.lowpass(order,fcut): fi.highpass(order,fcut);//
//f2  =  : fi.lowpass(order,fcut*2): fi.highpass(order,fcut*2); //
Ebassf1 = fi.lowpass(order,fcut): fi.highpass(order,600)
 with{
     order = 60;
     fcut = 600;
     f1group(x) = hgroup("[01] f1", x);
     gain = f1group(vslider("[01] GAIN" , -15, -96, +6, 0.1)) :ba.ba.db2linear : si.smoo;
     meter(x) = f1group(attach(x, an.amp_follower(0.5, x) : ba.linear2db : vbargraph("[02] METER [unit:dB]", -70, +5)));
 };

 Ebassf2 = fi.lowpass(order,fcut): fi.highpass(order,600)
 with{
     order = 60;
     fcut = 600;
     f2group(x) = hgroup("[01] f2", x);
     gain = f2group(vslider("[01] GAIN" , -15, -96, +6, 0.1)) :ba.ba.db2linear : si.smoo;
     meter(x) = f2group(attach(x, an.amp_follower(0.5, x) : ba.linear2db : vbargraph("[02] METER [unit:dB]", -70, +5)));
 };


 Ebassf3 = fi.lowpass(order,fcut): fi.highpass(order,600)
 with{
     order = 60;
     fcut = 600;
     f3group(x) = hgroup("[01] f3", x);
     gain = f3group(vslider("[01] GAIN" , -15, -96, +6, 0.1)) :ba.ba.db2linear : si.smoo;
     meter(x) = f3group(attach(x, an.amp_follower(0.5, x) : ba.linear2db : vbargraph("[02] METER [unit:dB]", -70, +5)));
 };

  Ebassf4 = fi.lowpass(order,fcut): fi.highpass(order,600)
 with{
     order = 60;
     fcut = 600;
     f4group(x) = hgroup("[01] f4", x);
     gain = f4group(vslider("[01] GAIN" , -15, -96, +6, 0.1)) :ba.ba.db2linear : si.smoo;
     meter(x) = f4group(attach(x, an.amp_follower(0.5, x) : ba.linear2db : vbargraph("[02] METER [unit:dB]", -70, +5)));
 };

   Ebassf5 = fi.lowpass(order,fcut): fi.highpass(order,600)
 with{
     order = 60;
     fcut = 600;
     f5group(x) = hgroup("[01] f5", x);
     gain = f5group(vslider("[01] GAIN" , -15, -96, +6, 0.1)) :ba.ba.db2linear : si.smoo;
     meter(x) = f5group(attach(x, an.amp_follower(0.5, x) : ba.linear2db : vbargraph("[02] METER [unit:dB]", -70, +5)));
 };
outmeter(x) = attach(x, an.amp_follower(0.5, x) : ba.linear2db : hbargraph("[02] OUTMETER [unit:dB]", -70, +5)); 
// Ebassf2 = : fi.highpass(128,1040): fi.lowpass(128,1040) : +(gain) : meter
//  whith{ ; 
//      order = 60;
//      fcut = 600;
//      f3
//  vocale "E" voce di basso
// f1 f2 f3 f4 f5
// 600 1040 2250 2450 2750 (frequenze)
// 60 70 110 120 130 (larghezza di banda Hz)
// 0 -7 -9 -9 -20 (decibel)
// a casa far suonare la vocale "E" con questi parametri     

process = no.noise <: hgroup("A FORMANTICO" , Ebassf1, Ebassf2, Ebassf3, Ebassf4, Ebassf5) :> outmeter ;
